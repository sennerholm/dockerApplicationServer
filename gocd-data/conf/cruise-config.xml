<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="75">
  <server artifactsdir="artifacts" agentAutoRegisterKey="388b633a88de126531afa41eff9aa69e" commandRepositoryLocation="default" serverId="3c98e67f-7050-46ef-b051-fd8e63aef897" />
  <pipelines group="WelcomeApi">
    <pipeline name="WelcomeApiBAT" labeltemplate="1.0.${COUNT}" isLocked="false">
      <params>
        <param name="SOURCE_DIR">api</param>
      </params>
      <trackingtool link="https://github.com/dmarell/welcome-server/issues/${ID}" regex="##(\d+)" />
      <environmentvariables>
        <variable name="PIPELINE_ENV">
          <value>AutoSmall</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github.com:sennerholm/welcome-server.git" />
      </materials>
      <stage name="Build" cleanWorkingDir="true">
        <jobs>
          <job name="Build2DockerImage">
            <tasks>
              <exec command="mvn" workingdir="#{SOURCE_DIR}">
                <arg>versions:set</arg>
                <arg>-DnewVersion=${env.GO_PIPELINE_LABEL}</arg>
                <arg>-B</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="#{SOURCE_DIR}">
                <arg>-c</arg>
                <arg>mvn clean package -Dtutumuser=`grep user ~/.tutum | awk -F ' = ' '{print $2}'` -B</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="#{SOURCE_DIR}">
                <arg>-c</arg>
                <arg>docker build --tag=welcome-api:$GO_PIPELINE_LABEL -f go/Dockerfile .</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="#{SOURCE_DIR}/target/classes/BuildInfo.properties" dest="downstream" />
              <artifact src="#{SOURCE_DIR}/scripts" dest="downstream" />
              <artifact src="#{SOURCE_DIR}/tests" dest="downstream" />
              <artifact src="#{SOURCE_DIR}/go" dest="downstream" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="AutoSmallDeployAndTest" fetchMaterials="false">
        <environmentvariables>
          <variable name="PIPELINE_ENV">
            <value>autosmall</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndTests">
            <tasks>
              <fetchartifact pipeline="WelcomeApiBAT" stage="Build" job="Build2DockerImage" srcdir="downstream">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash" workingdir="downstream/scripts">
                <arg>deployandsmoke.sh</arg>
                <arg>2</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="downstream/scripts">
                <arg>runtest.sh</arg>
                <arg>2</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="Done">
        <jobs>
          <job name="Publish">
            <tasks>
              <fetchartifact pipeline="WelcomeApiBAT" stage="Build" job="Build2DockerImage" srcdir="downstream">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash" workingdir="downstream">
                <arg>/opt/pipelineinabox/scripts/publish_docker.sh</arg>
                <arg>welcome-api</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="WelcomeApiAutoLarge" labeltemplate="${WelcomeApiBAT}-al${COUNT}" isLocked="false">
      <materials>
        <pipeline pipelineName="WelcomeApiBAT" stageName="Done" />
      </materials>
      <stage name="AutoLargeDeployAndTest" fetchMaterials="false">
        <environmentvariables>
          <variable name="PIPELINE_ENV">
            <value>autolarge</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndTests">
            <tasks>
              <fetchartifact pipeline="WelcomeApiBAT" stage="Build" job="Build2DockerImage" srcdir="downstream">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash" workingdir="downstream/">
                <arg>/opt/pipelineinabox/scripts/deploy_tutum.sh</arg>
                <arg>go/tutum/tutum.autolarge.yml</arg>
                <arg>welcome-api</arg>
                <arg>autolarge</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="downstream/scripts">
                <arg>runtest.sh</arg>
                <arg>tutum</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="WelcomeApiUAT" labeltemplate="${WelcomeApiBAT}-uat${COUNT}" isLocked="false">
      <materials>
        <pipeline pipelineName="WelcomeApiBAT" stageName="AutoSmallDeployAndTest" />
      </materials>
      <stage name="NotifyTesters">
        <jobs>
          <job name="sendMail">
            <tasks>
              <exec command="/bin/true" />
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="UATDeploy" fetchMaterials="false">
        <approval type="manual" />
        <environmentvariables>
          <variable name="PIPELINE_ENV">
            <value>uat</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <fetchartifact pipeline="WelcomeApiBAT" stage="Build" job="Build2DockerImage" srcdir="downstream">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash" workingdir="downstream/">
                <arg>/opt/pipelineinabox/scripts/deploy_tutum.sh</arg>
                <arg>go/tutum/tutum.uat.yml</arg>
                <arg>welcome-api</arg>
                <arg>uat</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="downstream/scripts">
                <arg>runtest.sh</arg>
                <arg>tutum</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="TestsOk">
        <approval type="manual" />
        <jobs>
          <job name="LoggTestReport">
            <tasks>
              <exec command="echo">
                <arg>Not implemented yet!</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="WelcomeApiProd" labeltemplate="${WelcomeApiAutoLarge}-pr${COUNT}" isLocked="false">
      <materials>
        <pipeline pipelineName="WelcomeApiUAT" stageName="TestsOk" materialName="WelcomeApiUAT" />
        <pipeline pipelineName="WelcomeApiAutoLarge" stageName="AutoLargeDeployAndTest" materialName="WelcomeApiAutoLarge" />
      </materials>
      <stage name="CreateReportsForDecision">
        <jobs>
          <job name="createreports">
            <tasks>
              <exec command="echo">
                <arg>Not Implemented</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="ProdDeploy" fetchMaterials="false">
        <approval type="manual" />
        <environmentvariables>
          <variable name="PIPELINE_ENV">
            <value>prod</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <fetchartifact pipeline="WelcomeApiBAT/WelcomeApiUAT" stage="Build" job="Build2DockerImage" srcdir="downstream">
                <runif status="passed" />
              </fetchartifact>
                            <exec command="bash" workingdir="downstream/">
                <arg>/opt/pipelineinabox/scripts/deploy_tutum.sh</arg>
                <arg>go/tutum/tutum.prod.yml</arg>
                <arg>welcome-api</arg>
                <arg>prod</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="downstream/scripts">
                <arg>runtest.sh</arg>
                <arg>tutum</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <agents>
  </agents>
</cruise>
